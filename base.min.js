function gaEventSocial(o, t, a) {
    if (t = t || "Social", "ga" in window) try {
        const n = window.ga.getAll()[0];
        if (void 0 !== n) {
            let e = {
                eventCategory: t,
                eventAction: o
            };
            void 0 !== a && (e.eventLabel = a), n.send("event", e)
        }
    } catch (e) {}
}

function shareApp(t, e = !1) {
    if (-1 !== ["facebook", "twitter", "linkedin", "vk", "odnoklassniki", "cloud", "github", "feedback", "otherapp", "bookmark", "zapier", "clipboard", "link"].indexOf(t)) {
        var n = -1 !== window.location.hostname.indexOf("localhost") ? "products.aspose.app" : window.location.hostname,
            r = window.location.pathname,
            s = encodeURI("https://" + n + r),
            i = encodeURI("https://" + n + "/words/common/img/howto.png"),
            l = document.title.replace("&", "and"),
            r = "cloud" !== t ? t.charAt(0).toUpperCase() + t.slice(1) : "WordsCloud",
            n = "undefined" != typeof InstallTrigger;
        e ? gaEventSocial(r, "SocialNPS", $("#nps-step-6 > .nps-step__row")[0].getAttribute("data-nps")) : gaEventSocial(r);
        var d = e => {
            let o = o || window.event;
            o = o.target || o.srcElement, "A" !== o.tagName && (a = document.createElement("a"), a.href = e, a.setAttribute("target", "_blank"), a.click())
        };
        if ("facebook" !== t || n)
            if (-1 !== ["facebook", "twitter", "linkedin", "vk", "odnoklassniki"].indexOf(t)) {
                let e;
                switch (t) {
                    case "facebook":
                        e = `https://www.facebook.com/sharer/sharer.php?u=${s}&picture=${i}&popup=true&app_id=813346076044703`;
                        break;
                    case "twitter":
                        e = `https://twitter.com/intent/tweet?text=${encodeURI(l)}&url=${s}&hashtags=${o.AppName}`;
                        break;
                    case "linkedin":
                        e = "https://www.linkedin.com/sharing/share-offsite/?url=" + s;
                        break;
                    case "vk":
                        e = "http://vk.com/share.php?url=" + s, l && (e += "&title=" + encodeURIComponent(l)), i && (e += "&image=" + i), e += "&noparse=true";
                        break;
                    case "odnoklassniki":
                        e = "https://connect.ok.ru/offer?url=" + s
                }
                r = (window.innerWidth - 560) / 2, n = (window.innerHeight - 520) / 2;
                window.open(e, "Social", `width=560,height=520,left=${r},top=${n},menubar=no,toolbar=no,status=no,resizable=yes,scrollbars=no`)
            } else switch (t) {
                case "link":
                case "clipboard":
                    var c = document.URL.replace("#", "");
                    navigator.clipboard.writeText(c), $("#nps-step-6").find(".fa-clipboard").removeClass("fa-clipboard").removeClass("fa-link").addClass("fa-check-circle");
                    break;
                case "otherapp":
                    break;
                case "cloud":
                    d("https://products.aspose.cloud/words/family");
                    break;
                case "github":
                    d("https://github.com/aspose-words/Aspose.Words-for-.NET");
                    break;
                case "zapier":
                    d("https://docs.aspose.cloud/words/plugins/zapier/")
            } else FB.ui({
                display: "popup",
                method: "share",
                href: s
            }, function(e) {})
    }
}! function(g) {
    g.fn.filedrop = function(l, e) {
        function d(e) {
            (e = e || event).preventDefault(), e.stopPropagation()
        }

        function c(e) {
            var o = function() {
                    var o, t = 1;
                    do {
                        o = !1;
                        for (let e = 0; e < m.length; e++)
                            if (m[e].id === t) {
                                t += 1, o = !0;
                                break
                            }
                    } while (o);
                    return t
                }(),
                t = e.name,
                a = null,
                n = null;
            l.UseSorting && (a = g('                    <span class="fileMoveUpLink">                        <i class="fas fa-arrow-up"></i>                    </span>                '), n = g('                    <span class="fileMoveDownLink">                        <i class="fas fa-arrow-down"></i>                    </span>                '), a.on("click", function() {
                ! function(e) {
                    for (var o, t, a = 0; a < m.length && m[a].id !== e; a++);
                    a < m.length && 0 !== a && (o = m[a - 1].id, t = m[a - 1], m[a - 1] = m[a], m[a] = t, t = g("#filedrop-" + h + " > #fileupload-" + e).detach(), g("#filedrop-" + h + " > #fileupload-" + o).before(t))
                }(o)
            }), n.on("click", function() {
                ! function(e) {
                    for (var o, t, a = 0; a < m.length && m[a].id !== e; a++);
                    a < m.length && a !== m.length - 1 && (o = m[a + 1].id, t = m[a + 1], m[a + 1] = m[a], m[a] = t, t = g("#filedrop-" + h + " > #fileupload-" + e).detach(), g("#filedrop-" + h + " > #fileupload-" + o).after(t))
                }(o)
            }));
            var r = g('                <span class="fileRemoveLink">                    <i class="far fa-minus-square"></i>                </span>            ');
            r.on("click", function() {
                ! function(e) {
                    for (var o = 0; o < m.length && m[o].id !== e; o++);
                    o < m.length && (null !== u && u(m[o]), m.splice(o, 1), g("#filedrop-" + h).find("#fileupload-" + e).remove(), 0 === m.length && g("#filedrop-" + h).find(".chooseFilesLabel").removeClass("d-none")), 0 == m.length && g("#filedrop-" + h).children("label").removeClass("d-none")
                }(o)
            });
            var s = g('                <span class="filename">\t\t\t\t<label>' + t + "</label>                </span>            "),
                i = g('<div id="fileupload-' + o + '" class="fileupload"></div>');
            i.on("dragover", d), i.on("drop", d), i.append(s), null !== a && null !== n && (i.append(a), i.append(n)), i.append(r), g("#filedrop-" + h).append(i), m.push({
                id: o,
                file: e,
                name: t
            })
        }

        function t(o) {
            var t, a;
            for (let e = 0; e < m.length; e++) {
                if (null === (t = 0 <= (t = (a = m[e]).name.lastIndexOf(".")) ? a.name.substring(t + 1).toUpperCase() : null) || -1 === l.UploadOptions.indexOf(t)) return l.showAlert(l.FileWrongTypeMessage + t), null;
                o.append(a.id, a.file, a.name)
            }
        }

        function o(e = 1, o = void 0) {
            if (void 0 === o && (o = l.MaximumUploadFiles), m.length) {
                if (m.length < e || m.length > o) return l.showAlert(l.FileAmountMessage), null;
                o = new FormData;
                return t(o), o
            }
            return l.showAlert(l.FileSelectMessage), null
        }

        function a(e) {
            var o, t = !1;
            if (e.target.files && e.target.files.length) {
                var a, n = e.target.files.length + m.length,
                    r = getArchiveFilesNumber(e.target.files);
                if (1 < r || 1 === r && 0 < n - 1) t = !0, l.showAlert(l.OnlyOneArchiveFile), window.setTimeout(function() {
                    l.hideAlert()
                }, 5e3);
                else if (n <= l.MaximumUploadFiles) {
                    l.hideAlert(), files_max = [];
                    for (var s = 0; s < e.target.files.length; s++) {
                        var i = e.target.files[s];
                        a = void 0, null !== (a = -1 !== (a = (o = i).name.lastIndexOf(".")) ? o.name.substring(a + 1).toUpperCase() : null) && -1 !== f.indexOf(a) || "GZ" === a ? i.size > l.MaximumUploadSize ? files_max.push(i.name) : (g("#filedrop-" + h).find(".chooseFilesLabel").addClass("d-none"), c(i)) : (t = !0, null !== a && (a = a.toUpperCase()), l.showAlert(l.FileWrongTypeMessage + a))
                    }
                    0 < files_max.length && (t = !0, l.showAlert(l.MaximumUploadSizeMessage + files_max.join(", ")))
                } else t = !0, l.showAlert(l.FileAmountMessage), window.setTimeout(function() {
                    l.hideAlert()
                }, 5e3);
                t || (0 < n ? g("#filedrop-" + h).children("label").addClass("d-none") : g("#filedrop-" + h).children("label").removeClass("d-none")), null !== p && p(e.target.files)
            }
            return g("input#UploadFileInput-" + h).val(""), !t
        }
        var p = null,
            u = null,
            h = e,
            f = l.Accept.split(/\s*,\s*/).map(function(e) {
                return e.substring(1).toUpperCase()
            }),
            m = [];
        return l.UploadAndRedirect ? g("input#UploadFileInput-" + h).on("change", function(e) {
            a(e) && null != o() && (l.showLoader(), l.Method())
        }) : g("input#UploadFileInput-" + h).on("change", a), {
            get droppedFiles() {
                return m
            },
            get prepareFormData() {
                return o
            },
            on: function(e, o) {
                "function" == typeof o && ("upload" === e ? p = o : "remove" === e && (u = o))
            },
            off: function(e) {
                "upload" === e ? p = null : "remove" === e && (u = null)
            },
            addFilesToFormData: t,
            reset: function() {
                m = [], g("#filedrop-" + h).find("div[id^=fileupload-]").remove(), g("#filedrop-" + h).find(".chooseFilesLabel").removeClass("d-none"), g("#filedrop-" + h).children("label").removeClass("d-none")
            }
        }
    }
}(jQuery), window.fbAsyncInit = function() {
    FB.init({
        appId: "813346076044703",
        autoLogAppEvents: !0,
        xfbml: !0,
        version: "v11.0"
    })
};
const NPS_STORAGE_KEY = "nps-score",
    NPS_STEP_COUNT = 6;
let npsStep = 1,
    npsGrade = {
        appname: "",
        score: null,
        message: "",
        message2: "",
        email: "",
        additional: "",
        referer: document.location.pathname
    };
const sendNpsScore = (a = 5, n = !1) => {
        if (null !== npsGrade.score || npsGrade.message || npsGrade.message2 || npsGrade.email) {
            let t;
            try {
                if (t = JSON.parse(window.localStorage.getItem(NPS_STORAGE_KEY)), !t) throw new Exception
            } catch (e) {
                t = {}
            }
            switch (t[o.AppName] = npsGrade.score, window.localStorage.setItem(NPS_STORAGE_KEY, JSON.stringify(t)), npsGrade.appname = o.AppName, npsGrade.appname) {
                case "Merger":
                case "Conversion":
                    $("#useOCRId").prop("checked") && (npsGrade.additional += "\n  OCRCheckbox: true", npsGrade.additional += "\n  OCRLanguageLocale: " + $("#ocrLanguagesSelect").val());
                    break;
                case "OCR":
                    npsGrade.additional += "\n  OCRLanguageLocale: " + $("#ocrLanguagesSelect").val();
                    break;
                case "Compress":
                    npsGrade.additional += "\n  Level: " + $("input[name=compressLevel]:checked").val()
            }
            $("#saveAs").length && (npsGrade.additional += "\n  SaveAs: " + $("#saveAs").val() + "\n");
            let e = void 0 !== fileDrop && $("#nps-attach-files").prop("checked") ? fileDrop.prepareFormData() : null;
            e = e || new FormData;
            for (const r in npsGrade) e.set(r, npsGrade[r]);
            showNpsPreloader(), $.ajax({
                method: "POST",
                url: o.APIBasePath + "feedback",
                data: e,
                processData: !1,
                contentType: !1,
                cache: !1,
                success: () => {
                    hideNpsPreloader();
                    for (let e = 1; e <= NPS_STEP_COUNT; e++) $(`.nps-container > #nps-step-${e}`).css("display", e === a ? "flex" : "none");
                    n || window.setTimeout(() => {
                        closeNps()
                    }, 3e3)
                },
                error: e => {
                    closeNps()
                }
            })
        } else closeNps()
    },
    startNpsSurvey = () => {
        $(".nps-container").css("display", "flex"), $(".nps-button").css("display", "none")
    },
    setNpsScore = e => {
        $(".nps-score").each(function() {
            $(this).hasClass(`nps-score-${e}`) ? $(this).addClass("selected") : $(this).hasClass("selected") && $(this).removeClass("selected")
        }), null != (npsGrade.score = e) && gaEventSocial(e, "NPS"), NpsStep(1)
    },
    NpsStep = (e, t = !1) => {
        switch (e) {
            case 1:
                if (!t) {
                    var a;
                    null !== npsGrade.score && (7 <= npsGrade.score ? (sendNpsScore(6, !0), $(".nps-step").each(function() {
                        "nps-step-6" === $(this).attr("id") ? $(this).css("display", "flex") : $(this).css("display", "none")
                    })) : (npsStep = 2, a = $("#nps-score-reason").html().replace("%appName%", o.AppName).replace("%appScore%", npsGrade.score), $("#current-nps-score").text(a), $(".nps-step").each(function() {
                        "nps-step-2" === $(this).attr("id") ? $(this).css("display", "flex") : $(this).css("display", "none")
                    })));
                    break
                }
                npsGrade.score = null;
                break;
            case 2:
                npsStep = 3, t || (npsGrade.message = $("#nps-message").val()), $(".nps-step").each(function() {
                    "nps-step-3" === $(this).attr("id") ? $(this).css("display", "flex") : $(this).css("display", "none")
                });
                break;
            case 3:
                npsStep = 4, t || (npsGrade.message2 = $("#nps-message-2").val()), void 0 === fileDrop ? $("#nps-step-4 > .form-check").hide() : npsGrade.score < 7 && null !== npsGrade.score ? $("#nps-attach-files").prop("checked", !0) : $("#nps-attach-files").prop("checked", !1), $(".nps-step").each(function() {
                    "nps-step-4" === $(this).attr("id") ? $(this).css("display", "flex") : $(this).css("display", "none")
                });
                break;
            case 4:
                t || (npsGrade.email = $("#nps-email").val()), sendNpsScore();
                break;
            case 5:
                $(".nps-step").each(function() {
                    "nps-step-6" === $(this).attr("id") ? $(this).css("display", "flex") : $(this).css("display", "none")
                })
        }
    },
    closeNps = () => {
        $(".nps-container").css("display", "none")
    },
    showNpsPreloader = () => {
        $(".nps-preloader").css("display", "flex")
    },
    hideNpsPreloader = () => {
        $(".nps-preloader").css("display", "none")
    },
    npsShow = (e = void 0) => {
        let t, a = !1;
        var n = void 0 !== e;
        try {
            if (t = JSON.parse(window.localStorage.getItem(NPS_STORAGE_KEY)), !t) throw new Exception;
            t[o.AppName] || (a = !0)
        } catch (e) {
            a = !0, t = {}
        }
        if ($(".nps-preloader").css("display", "none"), n || !t[o.AppName]) {
            $("#select-nps-score").text($("#nps-will-recommend").html().replace("%appName%", o.AppName));
            for (let e = 1; e <= NPS_STEP_COUNT; e++) $(`.nps-container > #nps-step-${e}`).css("display", 1 === e ? "flex" : "none");
            (n || a) && $(".nps-container").css("display", "flex"), n && gaEventSocial("Feedback", "Download", e)
        } else $(".nps-button").css("display", "flex")
    };
var dmIslogin = !1,
    dmUserInfo = null,
    deURL = "https://iqbal-elastic",
    dmSearchLabel = "asposedocs",
    dmSearchUnder = "aspose",
    dmSearchNum = 20,
    dmSearchDefault = !0,
    dmIsFirst = !0,
    dmHeaderDiv = "DynabicMenuInnerDiv",
    dmFooterDiv = "DynabicMenuFooter",
    dmUserControlsDiv = "DynabicMenuUserControls",
    dmSearchDiv = "DynabicMenuSearchLabel",
    dmLanguage = "English",
    dmURL = "https://menu.containerize.com/";

function LoadMenu(e, o) {
    o && (dmLanguage = o);
    GetUsernameCookie(e);
    ShowHeader(e)
}

function GetUsernameCookie(e) {
    var o = "";
    if ("" == (o = Base64.decode(getCookie("UserInfo")))) dmIslogin = !1;
    else {
        dmIslogin = !0;
        try {
            var t = o.split("&"),
                a = t[0].split("=")[1],
                n = t[1].split("=")[1];
            dmUserInfo = [{
                key: "UserNameLink",
                value: "" == n ? a : n
            }]
        } catch (e) {}
    }
    return o
}

function LoadContents(r) {
    var e = dmURL + "api/htmlapi/" + dmLanguage + "/";
    jQuery.getJSON(e + r, {
        format: "json"
    }).done(function(e) {
        var o = e.BodyHtml,
            t = e.NoLoginHtml,
            a = e.LoginHtml,
            n = e.BodyScript,
            e = e.FooterHtml;
        localStorage["bodyhtml" + r + "_" + dmLanguage] = o, localStorage["nloginhtml" + r + "_" + dmLanguage] = t, localStorage["loginhtml" + r + "_" + dmLanguage] = a, localStorage["headscript" + r + "_" + dmLanguage] = n, localStorage["footerhtml" + r + "_" + dmLanguage] = e, localStorage["GetLatest" + r + "_" + dmLanguage] = "false", ShowHeader(r)
    })
}

function ShowHeader(e) {
    1 == dmIsFirst && (dmIsFirst = !1);
    dmIslogin ? ($("#userNLogin").addClass("d-none"), $("#userLogin").removeClass("d-none")) : $("#userNLogin").removeClass("d-none");
    try {
        if (null != dmUserInfo && 0 <= dmUserInfo.length)
            for (var o = 0; o < dmUserInfo.length; o++) jQuery("#" + dmUserInfo[o].key).html(dmUserInfo[o].value)
    } catch (e) {}
    "function" == typeof menuLoaded && menuLoaded()
}

function SearchClicked() {}

function getCookie(e) {
    for (var o = e + "=", t = decodeURIComponent(document.cookie).split(";"), a = 0; a < t.length; a++) {
        for (var n = t[a];
            " " == n.charAt(0);) n = n.substring(1);
        if (0 == n.indexOf(o)) return n.substring(o.length, n.length)
    }
    return ""
}

function setCookie(e, o, t) {
    var a = new Date;
    a.setTime(a.getTime() + 24 * t * 60 * 60 * 1e3);
    a = "expires=" + a.toGMTString();
    document.cookie = e + "=" + o + ";" + a + ";path=/"
}
var Base64 = {
    _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
    encode: function(e) {
        var o, t, a, n, r, s, i = "",
            l = 0;
        for (e = Base64._utf8_encode(e); l < e.length;) a = (s = e.charCodeAt(l++)) >> 2, n = (3 & s) << 4 | (o = e.charCodeAt(l++)) >> 4, r = (15 & o) << 2 | (t = e.charCodeAt(l++)) >> 6, s = 63 & t, isNaN(o) ? r = s = 64 : isNaN(t) && (s = 64), i = i + this._keyStr.charAt(a) + this._keyStr.charAt(n) + this._keyStr.charAt(r) + this._keyStr.charAt(s);
        return i
    },
    decode: function(e) {
        var o, t, a, n, r, s, i = "",
            l = 0;
        for (e = e.replace(/[^A-Za-z0-9\+\/\=]/g, ""); l < e.length;) a = this._keyStr.indexOf(e.charAt(l++)), o = (15 & (n = this._keyStr.indexOf(e.charAt(l++)))) << 4 | (r = this._keyStr.indexOf(e.charAt(l++))) >> 2, t = (3 & r) << 6 | (s = this._keyStr.indexOf(e.charAt(l++))), i += String.fromCharCode(a << 2 | n >> 4), 64 != r && (i += String.fromCharCode(o)), 64 != s && (i += String.fromCharCode(t));
        return i = Base64._utf8_decode(i)
    },
    _utf8_encode: function(e) {
        e = e.replace(/\r\n/g, "\n");
        for (var o = "", t = 0; t < e.length; t++) {
            var a = e.charCodeAt(t);
            a < 128 ? o += String.fromCharCode(a) : (127 < a && a < 2048 ? o += String.fromCharCode(a >> 6 | 192) : (o += String.fromCharCode(a >> 12 | 224), o += String.fromCharCode(a >> 6 & 63 | 128)), o += String.fromCharCode(63 & a | 128))
        }
        return o
    },
    _utf8_decode: function(e) {
        var o, t = "",
            a = 0;
        for (c1 = c2 = 0; a < e.length;)(o = e.charCodeAt(a)) < 128 ? (t += String.fromCharCode(o), a++) : 191 < o && o < 224 ? (c2 = e.charCodeAt(a + 1), t += String.fromCharCode((31 & o) << 6 | 63 & c2), a += 2) : (c2 = e.charCodeAt(a + 1), c3 = e.charCodeAt(a + 2), t += String.fromCharCode((15 & o) << 12 | (63 & c2) << 6 | 63 & c3), a += 3);
        return t
    }
};

function showE2FDialog() {
    let e = document.getElementById("e2fModal"),
        o = document.getElementById("e2femail");
    e.addEventListener("shown.bs.modal", function() {
        o.focus()
    });
    let t = new bootstrap.Modal(e, {
        keyboard: !1,
        backdrop: "static"
    });
    t.show()
}

function sendE2F() {
    var t, a, n = $("#e2femail").val();
    if (n && isValidEmail(n)) {
        let e = fileDrop.prepareFormData();
        null !== e && (jQuery.isEmptyObject(fileDrop2) || fileDrop2.addFilesToFormData(e), t = {
            email: n,
            subject: $("#e2fsubject").val(),
            text: $("#e2ftext").val(),
            exception: window.E2Fexception,
            isPrivate: $("#e2fprivate").prop("checked")
        }, e.append("Item", JSON.stringify(t)), n = o.UIBasePath + "error2forum", t = document.getElementById("e2fModal"), a = bootstrap.Modal.getInstance(t), $.ajax({
            method: "POST",
            url: n,
            data: e,
            processData: !1,
            contentType: !1,
            cache: !1,
            timeout: 6e5,
            success: e => {
                a.hide(), hideAlert(), showMessage(`<a href="${e}" rel="noopener nofollow">${e}</a>`)
            },
            error: function(e) {
                $("#alertE2F").addClass("d-none"), a.hide(), void 0 === e.data || void 0 === e.data.status ? void 0 === e.responseJSON || void 0 === e.responseJSON.errors[""] ? void 0 === e.responseText ? showAlert("Error " + e.status + ": " + e.statusText) : showAlert("Error " + e.status + ": " + e.responseText) : showAlert("Error " + e.status + ": " + e.responseJSON.errors[""]) : showAlert(e.data.status)
            }
        }))
    } else window.alert(o.ValidationEmail)
}

function request(e, o, t, a) {
    showLoader(), $.ajax({
        method: "POST",
        url: e,
        data: o,
        processData: !1,
        contentType: !1,
        cache: !1,
        timeout: 6e5,
        success: "function" == typeof t ? t : workSuccess,
        xhr: function() {
            const e = $.ajaxSettings.xhr();
            return e.upload && e.upload.addEventListener("progress", progress, !1), e
        },
        error: function(e) {
            $("#WorkPlaceHolder").removeClass("d-none"), showedPromo = !1, ("function" != typeof a ? errorProcessRequest : a)(e)
        }
    })
}

function validateConversion() {
    var e = getArchiveFilesNumber();
    return !(1 < e || 1 === e && 0 < fileDrop.droppedFiles.length - e)
}

function requestConversion() {
    if (validateConversion()) {
        var t = fileDrop.prepareFormData();
        if (null !== t) {
            let e = $("#saveAs").val();
            void 0 !== e || 0 < (a = window.location.pathname.split("-")).length && (e = a[a.length - 1]);
            var a = $("#useOCRId").prop("checked") ? "true" : "false";
            request(o.APIBasePath + "convert?outputType=" + e + "&useOcr=" + a + "&locale=" + $("#ocrLanguagesSelect").val(), t)
        }
    }
}

function validateMerger() {
    var e = fileDrop.droppedFiles.length;
    return !(e < 2 || 10 < e) || (showAlert(o.FileAmountMessage), !1)
}

function requestMerger() {
    var e, t;
    !validateMerger() || null !== (e = fileDrop.prepareFormData()) && (t = $("#useOCRId").prop("checked") ? "true" : "false", request(o.APIBasePath + "merge?outputType=" + $("#saveAs").val() + "&useOcr=" + t + "&locale=" + $("#ocrLanguagesSelect").val(), e))
}

function requestParser() {
    var e = fileDrop.prepareFormData();
    null !== e && request(o.APIBasePath + "parse", e)
}

function requestCompress() {
    var e = fileDrop.prepareFormData();
    null !== e && request(o.APIBasePath + "compress?level=" + $("input[name=compressLevel]:checked").val(), e)
}

function requestAnnotation() {
    var e = fileDrop.prepareFormData();
    null !== e && request(o.APIBasePath + "removeAnnotations", e)
}

function requestMetadata() {
    var e = o.APIBasePath + "load",
        t = fileDrop.prepareFormData();
    null !== t && $.ajax({
        method: "POST",
        url: e,
        data: t,
        processData: !1,
        contentType: !1,
        cache: !1,
        timeout: 6e5,
        success: e => {
            $.metadata(e.metadata, e.id)
        },
        error: e => {
            void 0 !== e.data && void 0 !== e.data.status ? showAlert(e.data.status) : showAlert("Error " + e.status + ": " + e.statusText)
        }
    })
}

function requestSearch() {
    var e;
    !validateSearch() || null !== (e = fileDrop.prepareFormData()) && request(o.APIBasePath + "search?query=" + encodeURIComponent($("#searchQuery").val()), e)
}

function validateUnlock() {
    return !!$("#passw").val().length || (showAlert(o.validationMessage), !1)
}

function requestUnlock() {
    if (validateUnlock()) {
        let e = fileDrop.prepareFormData();
        null !== e && (e.set("passw", encodeURIComponent($("#passw").val())), request(o.APIBasePath + "unlock?outputType=" + $("#saveAs").val(), e))
    }
}

function validateProtect() {
    return !!$("#passw").val().length || (showAlert(o.validationMessage), !1)
}

function requestProtect() {
    var e;
    !validateProtect() || null !== (e = fileDrop.prepareFormData()) && request(o.APIBasePath + "protect?passw=" + encodeURIComponent($("#passw").val()), e)
}

function validateComparison() {
    return 1 === fileDrop.droppedFiles.length && 1 === fileDrop.droppedFiles.length || (showAlert(o.FileSelectMessage), !1)
}

function requestComparison() {
    if (validateComparison()) {
        let t = fileDrop.prepareFormData();
        if (null !== t) {
            let e = fileDrop2.prepareFormData();
            if (null !== e) {
                for (var a of e.entries()) t.append(a[0], a[1]);
                outputType = $("#saveAs").val();
                var n = o.APIBasePath + "compare?outputType=" + outputType,
                    r = {
                        IgnoreCaseChanges: $("input[id=ignoreCaseChangesId]:checked").prop("checked"),
                        Granularity: $("input[name=granularity]:checked").val()
                    };
                t.append("Options", JSON.stringify(r)), request(n, t)
            }
        }
    }
}

function requestSignature() {
    let t = fileDrop.prepareFormData();
    var e, a;
    null !== t && ("signatureTabText" === (e = $("input[name=signatureType]:checked").val()) ? (a = {
        Text: $("textarea[name=signatureText]").val(),
        Color: $("input[name=signatureColorText]").val()
    }, t.append("Options", JSON.stringify(a)), request(o.APIBasePath + "signatureText", t)) : "signatureTabImage" === e ? 1 === (a = $("#signatureImageFile")[0].files).length && (t.append("x-additional-resource-image", a[0]), request(o.APIBasePath + "signatureImage", t)) : "signatureTabDrawing" === e && document.getElementById("signatureDrawingCanvas").toBlob(function(e) {
        t.append("x-additional-resource-image", e), request(o.APIBasePath + "signatureImage", t)
    }))
}

function requestRedaction() {
    if (validateSearch()) {
        let t = fileDrop.prepareFormData();
        if (null !== t) {
            var a = {
                SearchPattern: $("input[id=searchQuery]").val(),
                Replacement: $("input[id=replaceText]").val()
            };
            t.append("FindReplaceData", JSON.stringify(a));
            a = {
                IsSearchInText: $("input[id=text]").prop("checked"),
                IsSearchInComments: $("input[id=comments]").prop("checked"),
                IsSearchInMetadata: $("input[id=metadata]").prop("checked"),
                IsCaseSensitive: $("input[id=caseSensitive]").prop("checked")
            };
            t.append("SearchOptions", JSON.stringify(a));
            let e = $("#saveAs").val();
            void 0 !== e || 0 < (a = window.location.pathname.split("-")).length && (e = a[a.length - 1]), request(o.APIBasePath + "redact?outputType=" + e, t)
        }
    }
}

function validateSearch() {
    return !!$("#searchQuery").val().length || (showAlert(o.validationSearchMessage), !1)
}

function requestViewer() {
    uploadFile(e => {
        hideLoader();
        var o = generateViewerLink(e);
        console.log(o), openIframe(o, window.href, `/words/view?id=${e}`)
    })
}

function requestEditor() {
    uploadFile(e => {
        hideLoader(), openIframe(generateEditorLink(e), window.href, `/words/edit?id=${e}`)
    })
}

function requestInvoice() {
    null !== data && request(o.APIBasePath + "invoice?outputType=" + outputType, data)
}

function requestRotate() {
    var t = fileDrop.prepareFormData();
    if (null !== t) {
        let e = "*";
        $("#pos-radio2").prop("checked") && (e = $("#rotateRange").val(), e && "" !== e || (e = $("#rotateRange").attr("placeholder"))), request(o.APIBasePath + "rotate?pages=" + encodeURIComponent(e) + "&angle=" + $("#angle").val(), t)
    }
}

function requestOCR() {
    var e = fileDrop.prepareFormData();
    null !== e && request(o.APIBasePath + "ocr?locale=" + $("#ocrLanguagesSelect").val() + "&outputType=" + $("#saveAs").val(), e)
}

function requestResume() {
    null !== data && request(o.APIBasePath + "resume?outputType=" + outputType, data)
}
const VIEWABLE_EXTENSIONS = ["doc", "docx", "docm", "dot", "dotx", "dotm", "rtf", "mobi", "odt", "ott", "txt", "pdf", "chm", "md"],
    ARCHIVE_EXTENSIONS = ["zip", "rar", "7z", "tar", "gz"],
    IMAGE_EXTENSIONS = ["jpg", "jpeg", "gif", "png", "bmp", "svg", "tiff"];

function integerFilter(e) {
    return 0 === e.length || /^\d*$/.test(e)
}

function signedIntegerFilter(e) {
    return 0 === e.length || /^-?\d*$/.test(e)
}

function floatFilter(e) {
    return 0 === e.length || /^\d*(\.\d*)?$/.test(e)
}

function signedFloatFilter(e) {
    return 0 === e.length || /^-?\d*(\.\d*)?$/.test(e)
}

function percentsFilter(e) {
    return 0 === e.length || /^\d*$/.test(e) && parseInt(e, 10) <= 100
}
let fileDrop = {},
    fileDrop2 = {},
    showedPromo = !1;
const _main_min_height = "auto";

function getExtension(e) {
    var o = e.lastIndexOf(".");
    return 0 <= o ? e.substring(o + 1).toLowerCase() : null
}

function getArchiveFilesNumber(o) {
    let t = 0;
    for (let e = 0; e < fileDrop.droppedFiles.length; e++) {
        var a = getExtension(fileDrop.droppedFiles[e].name);
        null !== a && -1 !== ARCHIVE_EXTENSIONS.indexOf(a) && (t += 1)
    }
    if (null != o)
        for (let e = 0; e < o.length; e++) {
            var n = getExtension(o[e].name);
            null !== n && -1 !== ARCHIVE_EXTENSIONS.indexOf(n) && (t += 1)
        }
    return t
}

function InitializeSignalR(e) {
    return (new signalR.HubConnectionBuilder).withUrl(e, {
        transport: signalR.HttpTransportType.WebSockets
    }).withHubProtocol(new signalR.protocols.msgpack.MessagePackHubProtocol).withAutomaticReconnect([0, 2e3, 2e3, 1e4, 1e4, 3e4, 6e4]).configureLogging(signalR.LogLevel.Warning).build()
}

function fetchError(e) {
    e = "string" == typeof e || e instanceof String ? e : e.message;
    showAlert(e)
}

function showLoader() {
    $(".progress > .progress-bar").html("5%"), $(".progress > .progress-bar").css("width", "5%"), $("#loader").removeClass("d-none"), hideAlert()
}

function hideLoader() {
    $("#loader").addClass("d-none"), $("#spinner").addClass("d-none"), $("#main").removeClass("closed")
}

function generateViewerLink(e) {
    return o.UIBasePath + "view?id=" + encodeURIComponent(e)
}

function generateEditorLink(e) {
    return o.UIBasePath + "edit?id=" + encodeURIComponent(e)
}

function sendPageView(e) {
    if ("ga" in window) try {
        const o = ga.getAll()[0];
        void 0 !== o && o.send("pageview", e)
    } catch (e) {}
}

function workSuccess(t, e, a) {
    if (hideLoader(), hideAlert(), $("#WorkPlaceHolder").addClass("d-none"), $("#DownloadPlaceHolder").removeClass("d-none"), window.dontShowPromo || (showPromo(), document.documentElement.clientWidth < 768 && (document.getElementById("main").style.minHeight = "auto")), void 0 === o.ReturnFromViewer) {
        var n = o.AppDownloadURL.indexOf("?");
        const r = -1 === n ? o.AppDownloadURL : o.AppDownloadURL.substring(0, n);
        sendPageView(r)
    }
    n = o.UIBasePath + "Download?id=" + encodeURIComponent(t.id);
    if ($("#DownloadButton").attr("href", n), o.DownloadUrl = n, o.ShowViewerButton) {
        let e = $("#ViewerLink");
        n = getExtension(t.id);
        null !== n && e.length && -1 !== VIEWABLE_EXTENSIONS.indexOf(n) ? e.on("click", function(e) {
            e.preventDefault(), e.stopPropagation(), openIframe(generateViewerLink(t), "/words/viewer", "/words/view")
        }) : (e.hide(), $(e[0].parentNode.previousElementSibling).hide())
    }
}

function isValidEmail(e) {
    return /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(e).toLowerCase())
}

function sendEmail() {
    var e = $("#EmailToInput").val();
    e && isValidEmail(e) ? (e = {
        appname: o.AppName,
        email: e,
        url: o.DownloadUrl,
        title: "Aspose.Words " + $("#ProductTitle")[0].innerText
    }, $("#sendEmailModal").modal("hide"), $("#sendEmailButton").addClass("d-none"), $.ajax({
        method: "POST",
        url: o.APIBasePath + "sendemail",
        data: e,
        dataType: "json",
        success: e => {
            showMessage(e.message)
        },
        complete: () => {
            $("#sendEmailButton").removeClass("d-none"), hideLoader()
        },
        error: e => {
            showAlert(e.responseJSON.message)
        }
    })) : window.alert(o.ValidationEmail)
}

function sendFeedback(e) {
    const t = "string" == typeof e ? e : $("#feedbackText").val();
    var a;
    !t || t.match(/^\s+$/) || 1e3 < t.length || (a = {
        appname: o.AppName,
        message: t
    }, e || gaEventSocial("Feedback Right"), $.ajax({
        method: "POST",
        url: o.APIBasePath + "feedback",
        data: a,
        dataType: "json",
        success: e => {
            showMessage(e.message), $("#feedback").hide()
        },
        error: e => {
            showAlert(e.responseJSON.message)
        }
    }))
}

function hideAlert() {
    $("#alertMessage").addClass("d-none"), $("#alertMessage").text(""), $("#alertSuccess").addClass("d-none"), $("#alertSuccess").text(""), $("#alertE2F").addClass("d-none")
}

function showAlert(e) {
    hideLoader(), $("#alertMessage").html(e), $("#alertMessage").removeClass("d-none"), $("#alertMessage").fadeOut(100).fadeIn(100).fadeOut(100).fadeIn(100)
}

function showMessage(e) {
    hideLoader(), $("#alertSuccess").html(e), $("#alertSuccess").removeClass("d-none")
}

function showPromo() {
    showedPromo || (showedPromo = !0, $("#WorkPlaceHolder").addClass("d-none"), $("#faq").addClass("d-none"), $("#spinner").removeClass("d-none"), o.UploadAndRedirect || ($("#main").addClass("closed"), $(".appfeaturesectionlist").addClass("d-none"), $(".app-features-section").removeClass("d-sm-block"), $(".app-product-section").addClass("d-none"), $("#content").addClass("d-none"), $(".howtolist").addClass("d-none"), $("#OtherApps").removeClass("d-none"), $("#Promo").removeClass("d-none")))
}

function progress(e) {
    var t;
    e.lengthComputable && (t = e.total, e = e.loaded, t = ((e = Math.round(100 * e / t)) < 5 ? 5 : e) + "%", $(".progress > .progress-bar").html(t), $(".progress > .progress-bar").css("width", t), 99 <= e && !window.dontShowPromo && (showPromo(), o.UploadAndRedirect || npsShow()))
}

function openIframe(e, o, t) {
    window.history.pushState(null, null, o), $("body").css("overflow-y", "hidden");
    const a = $('<div id="iframe-wrap"></div>');
    $("<iframe>", {
        src: e,
        id: "iframe-document",
        frameborder: 0,
        scrolling: "yes"
    }).appendTo(a), a.appendTo("body")
}

function closeIframe() {
    fileDrop.reset(), $("#WorkPlaceHolder").removeClass("d-none"), hideLoader(), $("div#iframe-wrap").remove(), $("body").css("overflow-y", "auto"), npsShow()
}

function errorProcessRequest(e) {
    if (void 0 === e.data || void 0 === e.data.status)
        if (void 0 === e.responseJSON || void 0 === e.responseJSON.errors[""]) {
            if (500 === e.status && void 0 !== e.responseText) {
                var o = JSON.parse(e.responseText);
                if (void 0 !== o && null != o && void 0 !== o.message) return showAlert(o.message), void(void 0 !== o.exception && null != o.exception && (window.E2Fexception = o.exception, $("#alertE2F").removeClass("d-none")))
            }
            void 0 === e.responseText ? showAlert("Error " + e.status + ": " + e.statusText) : showAlert("Error " + e.status + ": " + e.responseText)
        } else showAlert("Error " + e.status + ": " + e.responseJSON.errors[""]);
    else showAlert(e.data.status)
}

function uploadFile(e) {
    var t = fileDrop.prepareFormData();
    null !== t && request(o.APIBasePath + "upload", t, e)
}

function prepareDownloadUrl() {
    o.AppDownloadURL = o.AppURL;
    let e = o.AppDownloadURL.indexOf(":");
    0 < e && (o.AppDownloadURL = (0 < e ? o.AppDownloadURL.substring(e + 3) : o.AppURL) + "/download"), e = o.AppDownloadURL.indexOf("/"), o.AppDownloadURL = o.AppDownloadURL.substring(e)
}

function checkReturnFromViewer() {
    var e, t;
    0 < window.location.search.length && (o.ReturnFromViewer = !0, e = {
        id: $.QueryString.id
    }, t = window.location.href.split("?")[0], window.history.pushState({}, document.title, t), o.UploadAndRedirect || workSuccess(e))
}

function sendFeedbackExtended() {
    const e = $("#feedbackBody").val();
    e && !e.match(/^.s+$/) && ($("#feedbackModal").modal("hide"), sendFeedback(e))
}

function otherAppClick(e, o = !1) {
    if ("ga" in window) try {
        const t = window.ga.getAll()[0];
        void 0 !== t && null != t && t.send("event", {
            eventCategory: "Other App Click" + (o ? " Left" : ""),
            eventAction: e
        })
    } catch (e) {}
}

function expandCollapse() {
    const e = $(".panelLeft__expand"),
        o = $(".pbtn"),
        t = $("#main").first();
    null != window._panelLeft_timer && window.clearTimeout(window._panelLeft_timer), e.length && o.length && (e.hasClass("expanded") ? (o.each(function() {
        "1" === $(this).attr("data-collapse").toString() && $(this).addClass("collapsed")
    }), e.removeClass("expanded"), t.css("min-height", window._main_min_height)) : (window._main_min_height = t.css("min-height"), window._panelLeft_timer = window.setTimeout(() => {
        o.each(function() {
            $(this).hasClass("collapsed") && $(this).removeClass("collapsed")
        }), e.addClass("expanded")
    }, 1e3), t.css("min-height", 34 * (2 + o.length) + "px")))
}

function validateStringPageRange(e) {
    let t = !0;
    if (0 === e.length || e.match(/^\s+$/) || -1 === e.indexOf(",") && !e.match(/^\d+$/) && !e.match(/^\d+\-\d+$/)) t = !1;
    else {
        let o = e.split(/[,;]/);
        for (let e = 0; e < o.length; e++) {
            if (!o[e].match(/^\d+$/) && !o[e].match(/^\d+\-\d+$/)) {
                t = !1;
                break
            }
            if (o[e].match(/^\d+\-\d+$/)) {
                var a = o[e].indexOf("-"),
                    n = parseInt(o[e].substring(0, a));
                if (parseInt(o[e].substring(a + 1)) <= n) {
                    t = !1;
                    break
                }
            }
        }
    }
    return t
}

function InitHeaderAndFooter() {
    LoadMenu("AsposeApp"), $(".show-hide-menu").click(function() {
        $(".header").toggleClass("activemenu")
    })
}
document.addEventListener("lazybeforeunveil", function(e) {
    var o = e.target.getAttribute("data-bg");
    o && (e.target.style.backgroundImage = "url(" + o + ")")
}), $.extend($.expr[":"], {
    isEmpty: function(e) {
        return "" === e.value
    }
}), jQuery.fn.inputFilter = function(e) {
    return this.on("input keydown keyup mousedown mouseup select contextmenu drop", function() {
        e(this.value) ? (this.oldValue = this.value, this.oldSelectionStart = this.selectionStart, this.oldSelectionEnd = this.selectionEnd) : this.hasOwnProperty("oldValue") ? (this.value = this.oldValue, this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd)) : this.value = ""
    })
}, jQuery.QueryString = function(t) {
    let a = {};
    for (let o = 0; o < t.length; ++o) {
        let e = t[o].split("=", 2);
        2 === e.length && (a[e[0]] = decodeURIComponent(e[1].replace(/\+/g, " ")))
    }
    return a
}(window.location.search.substr(1).split("&")), $(document).ready(function() {
    prepareDownloadUrl(), checkReturnFromViewer(), fileDrop = $("form#UploadFile").filedrop(Object.assign({
        showAlert: showAlert,
        hideAlert: hideAlert,
        showLoader: showLoader,
        progress: progress
    }, o), 1), "Comparison" === o.AppName && (fileDrop2 = $("form#UploadFile").filedrop(Object.assign({
        showAlert: showAlert,
        hideAlert: hideAlert,
        showLoader: showLoader,
        progress: progress
    }, o), 2)), window.onpopstate = function(e) {
        0 < $("div#iframe-wrap").length && closeIframe()
    }, o.UploadAndRedirect || $("#uploadButton").on("click", o.Method), $("#bookmarkModal").on("show.bs.modal", function(e) {
        $("#bookmarkModal").css("display", "flex"), $("#bookmarkModal").on("keydown", function(e) {
            (e.metaKey || e.ctrlKey) && "d" === String.fromCharCode(e.which).toLowerCase() && $("#bookmarkModal").modal("hide")
        })
    }), $("#bookmarkModal").on("hidden.bs.modal", function(e) {
        $("#bookmarkModal").off("keydown")
    }), $("#sendEmailButton").on("click", function() {
        gaEventSocial("Send Email", "Download"), $("#sendEmailModal").modal({
            keyboard: !0
        })
    }), $("#sendEmailModal").on("show.bs.modal", function() {
        $("#sendEmailModal").css("display", "flex")
    }), $("#sendEmailModal").on("shown.bs.modal", function() {
        $("#EmailToInput").focus()
    }), $("#feedbackModal").on("show.bs.modal", function(e) {
        $("#feedbackModal").css("display", "flex")
    }), $("#feedbackModal").on("shown.bs.modal", function() {
        $("#feedbackBody").focus()
    }), $("#ProductImage").on("click", () => {
        gaEventSocial("WordsImage")
    }), $("#AsposeProductTitle").on("click", () => {
        gaEventSocial("WordsTitle")
    }), $("#otherFiles").on("click", () => {
        gaEventSocial("Other Files", "Download")
    }), $("#acontent").on("click", () => {
        gaEventSocial("WordsContent", void 0, el.target.href)
    }), $(".acontent").on("click", e => {
        gaEventSocial("WordsContent", void 0, e.target.href)
    }), $(".otherfeatures a").on("click", e => {
        gaEventSocial("OtherFeature", void 0, e.target.text)
    }), $("#PoweredBy").on("click", () => {
        gaEventSocial("WordsPoweredBy")
    }), $(".promo").on("click", e => {
        e = e.target.getAttribute("data-label");
        null != e && 0 !== e.length && gaEventSocial(e, "Promo")
    }), $(document).on("keydown", function(e) {
        "KeyD" !== e.originalEvent.code || !e.originalEvent.ctrlKey || e.originalEvent.altKey || e.originalEvent.shiftKey || e.originalEvent.metaKey || gaEventSocial("Target: " + window.location.pathname, "[Ctrl + D] keypress")
    });
    const e = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    e.map(function(e) {
        return new bootstrap.Tooltip(e)
    });
    $(document).on("keydown", function(e) {
        "KeyQ" === e.originalEvent.code && e.originalEvent.ctrlKey && e.originalEvent.altKey && e.originalEvent.shiftKey && !e.originalEvent.metaKey && ($("#DynabicMenuInnerDiv").hide(), $("#panel-left-buttons").hide(), $("#social-panel").hide(), $("#developerPromo").hide(), $("#mobilePromo").hide(), $("#breadcrumb").hide(), $("#terms").hide(), $(".fb-like").hide(), $("#divByChapters").removeClass("d-none"), $("#locale").css({
            top: "15px"
        }), $("#main").css({
            "min-height": "800px"
        }), window.scrollTo(0, 0), window.dontShowPromo = !0)
    })
});
const showCheckBoxIfNeed = function() {
        for (var e of fileDrop.droppedFiles) {
            e = getExtension(e.name);
            if (null !== e && -1 !== IMAGE_EXTENSIONS.indexOf(e)) {
                $("#OCRCheckboxId").removeClass("d-none");
                break
            }
        }
    },
    hideCheckBox = function() {
        $("#OCRCheckboxId").addClass("d-none"), $("#useOCRId").prop("checked", !1)
    },
    showOrHideCheckbox = function() {
        let e = $("#saveAs").val();
        (null !== e && -1 !== IMAGE_EXTENSIONS.indexOf(e.toLowerCase()) ? hideCheckBox : showCheckBoxIfNeed)()
    };
$(document).ready(() => {
    0 < $("#OCRCheckboxId").length && (fileDrop.on("upload", showCheckBoxIfNeed), fileDrop.on("remove", hideCheckBox), $("#saveAs").on("change", showOrHideCheckbox))
});